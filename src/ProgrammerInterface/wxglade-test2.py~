#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre on Thu Nov  3 18:14:08 2022
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
import binprog
import uievents
# end wxGlade


class SerialSelect(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: SerialSelect.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.SetSize((325, 131))
		self.SetTitle("frame")

		self.panel_1 = wx.Panel(self, wx.ID_ANY)

		sizer_1 = wx.BoxSizer(wx.VERTICAL)

		self.SerialPort = wx.TextCtrl(self.panel_1, wx.ID_ANY, "/dev/ttyUSB0")
		self.SerialPort.SetMinSize((300, 32))
		self.SerialPort.SetToolTip("Serial Port of the programmer")
		sizer_1.Add(self.SerialPort, 0, wx.EXPAND, 0)

		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)

		self.SerialBaudRate = wx.ComboBox(self.panel_1, wx.ID_ANY, choices=["Baudrate", "19200", "9600"], style=wx.CB_DROPDOWN)
		sizer_2.Add(self.SerialBaudRate, 0, wx.EXPAND, 0)

		self.checkbox = wx.CheckBox(self.panel_1, wx.ID_ANY, "Save Settings?", style=wx.CHK_2STATE)
		self.checkbox.SetValue(1)
		sizer_2.Add(self.checkbox, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		self.SerialConnect = wx.Button(self.panel_1, wx.ID_ANY, "Connect to serial port")
		sizer_1.Add(self.SerialConnect, 0, wx.EXPAND, 0)

		self.panel_1.SetSizer(sizer_1)

		self.Layout()

		self.SerialConnect.Bind(wx.EVT_BUTTON, self.OnSerialConnect)
		# end wxGlade

	def OnSerialConnect(self, event):  # wxGlade: SerialSelect.<event_handler>
		print("Event handler 'OnSerialConnect' not implemented!")
		event.Skip()

# end of class SerialSelect

class Main(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: Main.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.SetSize((400, 250))
		self.SetTitle("z80 Programmer")

		self.panel_1 = wx.Panel(self, wx.ID_ANY)

		sizer_1 = wx.BoxSizer(wx.VERTICAL)

		sizerFileSelect = wx.StaticBoxSizer(wx.StaticBox(self.panel_1, wx.ID_ANY, "File Selection"), wx.HORIZONTAL)
		sizer_1.Add(sizerFileSelect, 1, wx.EXPAND, 0)

		self.FileSelect = wx.Button(self.panel_1, wx.ID_ANY, "Select File")
		sizerFileSelect.Add(self.FileSelect, 0, wx.ALIGN_CENTER_VERTICAL, 0)

		SelectedFile = wx.StaticText(self.panel_1, wx.ID_ANY, "Selected File")
		sizerFileSelect.Add(SelectedFile, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 7)

		ProgrammingControls = wx.StaticBoxSizer(wx.StaticBox(self.panel_1, wx.ID_ANY, "Programming"), wx.HORIZONTAL)
		sizer_1.Add(ProgrammingControls, 1, wx.EXPAND, 0)

		self.Write = wx.Button(self.panel_1, wx.ID_ANY, "Write")
		ProgrammingControls.Add(self.Write, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 1)

		self.Read = wx.Button(self.panel_1, wx.ID_ANY, "Read")
		ProgrammingControls.Add(self.Read, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 1)

		sizer_2 = wx.StaticBoxSizer(wx.StaticBox(self.panel_1, wx.ID_ANY, "Serial Port Settings"), wx.HORIZONTAL)
		sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)

		CurSerialSettings = wx.BoxSizer(wx.VERTICAL)
		sizer_2.Add(CurSerialSettings, 2, wx.ALIGN_CENTER_VERTICAL, 0)

		CurSerialPort = wx.StaticText(self.panel_1, wx.ID_ANY, "Serial Port")
		CurSerialSettings.Add(CurSerialPort, 0, wx.EXPAND, 0)

		CurSerialBaud = wx.StaticText(self.panel_1, wx.ID_ANY, "Baudrate")
		CurSerialSettings.Add(CurSerialBaud, 0, wx.EXPAND, 0)

		self.SetSerialSettings = wx.Button(self.panel_1, wx.ID_ANY, "Settings")
		sizer_2.Add(self.SetSerialSettings, 1, wx.ALIGN_CENTER_VERTICAL, 0)

		self.panel_1.SetSizer(sizer_1)

		self.Layout()

		self.FileSelect.Bind(wx.EVT_BUTTON, self.OnFileSelect)
		self.Write.Bind(wx.EVT_BUTTON, self.OnWrite)
		self.Read.Bind(wx.EVT_BUTTON, self.OnRead)
		self.SetSerialSettings.Bind(wx.EVT_BUTTON, self.OnSerialPortSettings)
		# end wxGlade

	def OnFileSelect(self, event):  # wxGlade: Main.<event_handler>
		print("Event handler 'OnFileSelect' not implemented!")
		event.Skip()

	def OnWrite(self, event):  # wxGlade: Main.<event_handler>
		print("Event handler 'OnWrite' not implemented!")
		event.Skip()

	def OnRead(self, event):  # wxGlade: Main.<event_handler>
		print("Event handler 'OnRead' not implemented!")
		event.Skip()

	def OnSerialPortSettings(self, event):  # wxGlade: Main.<event_handler>
		print("Event handler 'OnSerialPortSettings' not implemented!")
		event.Skip()

# end of class Main

class ProgInterface(wx.App):
	def OnInit(self):
		self.Main = Main(None, wx.ID_ANY, "")
		self.SetTopWindow(self.Main)
		self.Main.Show()
		return True

# end of class ProgInterface

if __name__ == "__main__":
	ProgrammerInterface = ProgInterface(0)
	ProgrammerInterface.MainLoop()
